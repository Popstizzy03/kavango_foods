---
// Toast notification component
const { id, class: className, type = 'success' } = Astro.props;
---

<div id={id} class={`toast-container ${className || ''}`}>
  <div class="toast-content">
    <div class="toast-icon">
      <svg xmlns="http://www.w3.org/2000/svg" class="icon success-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
      </svg>
      <svg xmlns="http://www.w3.org/2000/svg" class="icon error-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
      <svg xmlns="http://www.w3.org/2000/svg" class="icon info-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
      </svg>
    </div>
    <div class="toast-message">
      <slot>Notification message</slot>
    </div>
    <button class="toast-close" onclick="this.parentElement.parentElement.style.display='none'">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>
</div>

<style>
  .toast-container {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    z-index: 1000;
    max-width: 400px;
    min-width: 300px;
    pointer-events: auto;
    animation: slideIn 0.3s ease-out;
  }
  
  .toast-content {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem;
    background: white;
    border-radius: 0.75rem;
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    border-left: 4px solid #10b981;
    backdrop-filter: blur(8px);
    transition: all 0.3s ease;
  }
  
  .toast-container:hover .toast-content {
    transform: translateY(-2px);
    box-shadow: 0 20px 35px -5px rgba(0, 0, 0, 0.15), 0 15px 15px -5px rgba(0, 0, 0, 0.08);
  }
  
  .toast-icon {
    flex-shrink: 0;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #dcfce7;
    color: #10b981;
  }
  
  .toast-container.error .toast-content {
    border-left-color: #ef4444;
  }
  
  .toast-container.error .toast-icon {
    background: #fee2e2;
    color: #ef4444;
  }
  
  .toast-container.info .toast-content {
    border-left-color: #3b82f6;
  }
  
  .toast-container.info .toast-icon {
    background: #dbeafe;
    color: #3b82f6;
  }
  
  .icon {
    width: 1rem;
    height: 1rem;
    display: none;
  }
  
  .toast-container .success-icon {
    display: block;
  }
  
  .toast-container.error .error-icon {
    display: block;
  }
  
  .toast-container.error .success-icon {
    display: none;
  }
  
  .toast-container.info .info-icon {
    display: block;
  }
  
  .toast-container.info .success-icon {
    display: none;
  }
  
  .toast-message {
    flex: 1;
    color: #374151;
    font-weight: 500;
    line-height: 1.4;
  }
  
  .toast-close {
    flex-shrink: 0;
    padding: 0.25rem;
    color: #6b7280;
    hover: #374151;
    background: none;
    border: none;
    border-radius: 0.375rem;
    cursor: pointer;
    transition: colors 0.2s;
  }
  
  .toast-close:hover {
    color: #374151;
    background: #f3f4f6;
  }
  
  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }
  
  .toast-container.hidden {
    display: none;
  }
</style>