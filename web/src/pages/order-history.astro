---
import Layout from '../layouts/Layout.astro';
import "../styles/global.css";
---

<Layout title="Order History - Okavango Foods">
  <section class="py-16 bg-gradient-to-r from-orange-50 to-green-50">
    <div class="container mx-auto px-4">
      <h1 class="text-4xl md:text-5xl font-bold mb-4 text-center">Your <span class="text-primary">Order</span> History</h1>
      <p class="text-center text-text-light max-w-2xl mx-auto mb-12">
        View all your previous orders and their status
      </p>
      
      <div class="max-w-4xl mx-auto">
        <div id="not-logged-in" class="bg-white p-8 rounded-xl shadow-md text-center">
          <div class="w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center text-blue-600 mx-auto mb-6">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z" clip-rule="evenodd" />
            </svg>
          </div>
          
          <h2 class="text-2xl font-semibold mb-4">Track with Your Phone Number</h2>
          <p class="text-text-light mb-6">
            Enter the phone number you used for your order to view your order history.
          </p>
          
          <div class="max-w-md mx-auto">
            <div class="flex flex-col sm:flex-row gap-4">
              <input 
                type="tel" 
                id="phone-input" 
                placeholder="Enter your phone number" 
                class="flex-1 px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary"
              >
              <button id="track-btn" class="btn btn-primary whitespace-nowrap">Track Orders</button>
            </div>
            <p id="phone-error" class="text-red-500 text-sm mt-2 hidden">Please enter a valid phone number</p>
          </div>
        </div>
        
        <div id="order-history-container" class="hidden">
          <div class="bg-white p-8 rounded-xl shadow-md mb-6">
            <h2 class="text-2xl font-semibold mb-6">Your Orders</h2>
            <div id="orders-list" class="space-y-6">
              <div class="text-center text-text-light py-8">
                No orders found for this phone number.
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const phoneInput = document.getElementById('phone-input') as HTMLInputElement | null;
    const trackBtn = document.getElementById('track-btn') as HTMLButtonElement | null;
    const phoneError = document.getElementById('phone-error') as HTMLElement | null;
    const notLoggedIn = document.getElementById('not-logged-in') as HTMLElement | null;
    const orderHistoryContainer = document.getElementById('order-history-container') as HTMLElement | null;
    const ordersList = document.getElementById('orders-list') as HTMLElement | null;
    
    if (!phoneInput || !trackBtn || !phoneError || !notLoggedIn || !orderHistoryContainer || !ordersList) {
      console.error('Required DOM elements not found');
      return;
    }
    
    function calculateTotal(cart) {
      return cart.reduce((sum, item) => sum + parseFloat(item.price.replace('K', '')) * item.quantity, 0).toFixed(2);
    }
    
    function renderOrders(phoneNumber) {
      const orders = JSON.parse(localStorage.getItem('orders') || '[]');
      const userOrders = orders.filter(order => order.phone === phoneNumber);
      
      if (userOrders.length > 0) {
        ordersList.innerHTML = userOrders.map(order => `
          <div class="border rounded-lg p-6">
            <div class="flex flex-col md:flex-row justify-between mb-4">
              <div>
                <h3 class="font-semibold">Order #${order.id}</h3>
                <p class="text-text-light text-sm">${new Date(order.date).toLocaleDateString()}</p>
              </div>
              <div class="mt-2 md:mt-0">
                <span class="inline-block px-3 py-1 text-sm font-semibold text-green-800 bg-green-100 rounded-full">
                  ${order.status}
                </span>
              </div>
            </div>
            <div class="border-t pt-4">
              <div class="flex justify-between mb-2">
                <span>Total:</span>
                <span class="font-semibold">K${order.total}</span>
              </div>
              <div class="flex justify-between">
                <span>Items:</span>
                <span>${order.items.length} items</span>
              </div>
            </div>
            <div class="mt-4 flex justify-between">
              <button class="text-primary font-medium flex items-center">
                <span>View Details</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-1" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
              </button>
              <button class="delete-order-btn text-red-500 font-medium" data-order-id="${order.id}">Delete Order</button>
            </div>
          </div>
        `).join('');
        
        document.querySelectorAll('.delete-order-btn').forEach(btn => {
          btn.addEventListener('click', () => {
            const orderId = btn.dataset.orderId;
            let orders = JSON.parse(localStorage.getItem('orders') || '[]');
            orders = orders.filter(order => order.id !== parseInt(orderId));
            localStorage.setItem('orders', JSON.stringify(orders));
            renderOrders(phoneNumber);
          });
        });
      } else {
        ordersList.innerHTML = '<div class="text-center text-text-light py-8">No orders found for this phone number.</div>';
      }
    }
    
    trackBtn.addEventListener('click', () => {
      const phoneNumber = phoneInput.value.trim();
      
      if (!phoneNumber) {
        phoneError.textContent = 'Please enter your phone number';
        phoneError.classList.remove('hidden');
        return;
      }
      
      if (!/^\d{10}$/.test(phoneNumber.replace(/\D/g, ''))) {
        phoneError.textContent = 'Please enter a valid 10-digit phone number';
        phoneError.classList.remove('hidden');
        return;
      }
      
      phoneError.classList.add('hidden');
      notLoggedIn.classList.add('hidden');
      orderHistoryContainer.classList.remove('hidden');
      renderOrders(phoneNumber);
    });
  });
</script>