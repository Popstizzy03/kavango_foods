---
import Layout from '../layouts/Layout.astro';
import DeliveryForm from '../components/DeliveryForm.astro';
import Toast from '../components/Toast.astro';
import "../styles/global.css";
---

<Layout title="Checkout - Okavango Foods">
  <section class="py-16 bg-gradient-to-r from-orange-50 to-green-50">
    <div class="container mx-auto px-4">
      <h1 class="text-4xl md:text-5xl font-bold mb-4 text-center">Checkout</h1>
      <p class="text-center text-text-light max-w-2xl mx-auto mb-12">
        Complete your order with a few simple steps
      </p>
      
      <div class="max-w-4xl mx-auto">
        <div class="bg-white p-8 rounded-xl shadow-md mb-6">
          <h2 class="text-2xl font-semibold mb-6">Order Summary</h2>
          <div id="order-summary" class="mb-6">
            <!-- Order summary will be inserted here -->
          </div>
          
          <div class="border-t pt-4">
            <div class="flex justify-between mb-2">
              <span class="font-semibold">Subtotal:</span>
              <span id="subtotal" class="font-semibold">K0.00</span>
            </div>
            <div class="flex justify-between mb-2">
              <span class="font-semibold">Delivery Fee:</span>
              <span id="delivery-fee" class="font-semibold">K25.00</span>
            </div>
            <div class="flex justify-between text-lg">
              <span class="font-bold">Total:</span>
              <span id="total" class="font-bold text-primary">K0.00</span>
            </div>
          </div>
        </div>
        
        <DeliveryForm />
      </div>
    </div>
  </section>
  
  <Toast id="toast" class="hidden fixed bottom-4 right-4 px-4 py-3 rounded-lg shadow-lg z-50" />
</Layout>

<script>
  // Define types for better type safety
  interface CartItem {
    id: string;
    name: string;
    price: string;
    quantity: number;
  }

  document.addEventListener('DOMContentLoaded', () => {
    const orderSummaryElement = document.getElementById('order-summary');
    const subtotalElement = document.getElementById('subtotal');
    const totalElement = document.getElementById('total');
    
    // Get cart from localStorage
    const cart: CartItem[] = JSON.parse(localStorage.getItem('cart') || '[]');
    
    if (cart.length === 0) {
      // Redirect to cart if empty
      window.location.href = '/cart';
    } else {
      // Calculate totals
      let subtotal = 0;
      const deliveryFee = 25; // Fixed delivery fee in Kwacha
      
      // Create order summary HTML
      let orderSummaryHTML = '<div class="space-y-4">';
      
      // FIX: Explicitly type the parameter
      cart.forEach((item: CartItem) => {
        const itemTotal = parseFloat(item.price.replace('K', '')) * item.quantity;
        subtotal += itemTotal;
        
        orderSummaryHTML += `
          <div class="flex justify-between">
            <div>
              <span class="font-medium">${item.name}</span>
              <span class="text-text-light ml-2">x${item.quantity}</span>
            </div>
            <span>K${itemTotal.toFixed(2)}</span>
          </div>
        `;
      });
      
      orderSummaryHTML += '</div>';
      
      // FIX: Null safety checks
      if (orderSummaryElement) {
        orderSummaryElement.innerHTML = orderSummaryHTML;
      }
      
      // Update totals with null safety
      const total = subtotal + deliveryFee;
      if (subtotalElement) {
        subtotalElement.textContent = `K${subtotal.toFixed(2)}`;
      }
      if (totalElement) {
        totalElement.textContent = `K${total.toFixed(2)}`;
      }
      
      // Store order total in localStorage for use in payment
      localStorage.setItem('orderTotal', total.toFixed(2));
    }
  });

  function saveOrder(cart, phone) {
  const orders = JSON.parse(localStorage.getItem('orders') || '[]');
  const order = {
    id: Date.now(),
    date: new Date().toISOString(),
    phone,
    items: cart,
    total: cart.reduce((sum, item) => sum + parseFloat(item.price.replace('K', '')) * item.quantity, 0).toFixed(2),
    status: 'Pending'
  };
  orders.push(order);
  localStorage.setItem('orders', JSON.stringify(orders));
}
</script>